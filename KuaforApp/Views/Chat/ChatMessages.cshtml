@model KuaforApp.Models.ChatModel
@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var userName = ViewBag.username;


}
<style>
    .card {
        cursor: pointer
    }

        .card:hover {
            background-color: lightblue
        }

    .chats {
        
        overflow: auto;
    }

    .chat {
        margin-top:25px;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        max-height: 100%;
        height:750px
    }

    .chat-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        padding-bottom: 1rem;
        overflow: auto;
    }

    .chat-input {
        min-height: 60px;
        max-height: 60px;
    }

    .message {
        display: flex;
        flex-direction: row;
        margin-top: 0.25rem;
    }

        .message:first-child {
            margin-top: auto;
        }

        .message > * {
            padding: 0.2rem;
        }

        .message > header {
            text-align: right;
            min-width: 100px;
            font-weight: bold
        }

        .message > p {
            word-break:break-word;
            margin: 0;
            flex-grow: 5;
        }

        .message > footer {
            min-width: 60px;
            text-align: center
        }
        .title{
        margin-top: 2.3rem!important;
    }
        @@media screen and (min-width:768px){
            .media{
                word-break:break-word;
            }
        }
</style>
<div class="container mt-5">
    <div class="row">
        <div class="col-md-4">
            <div class="chats">
                @foreach (var item in Model.Chats)
                {
                    <div class="card">
                        <div onclick="window.location='/Chat/ChatMessages/@item.Id'" class="media p-2">
                            <input type="hidden" id="selectedid" value="@item.Id" />
                            <img class="d-flex mr-3 rounded-circle" width="100" height="100" src="/Upload/@item.UserProfile" alt="">
                            <div class="media-body">
                                <h5 class="title">@item.UserName</h5>
                               
                            </div>
                        </div>
                    </div>


                }
            </div>


        </div>
        <input type="hidden" id="clickedMessage" />
        <div class="col-md-8">
            <div class="chat text-white">
                <div class="chat-body">
                    @foreach (var item in Model.Messages)
                    {

                        <div class="message">
                            <header>@item.Name</header>
                            <p>@item.Text</p>
                            <footer>@item.Timestamp</footer>
                        </div>
                        



                    }





                </div>
                <div class="chat-input">
                    <form asp-controller="Chat" onsubmit="sendMessage(event)" asp-action="CreateMessage">
                        <input type="hidden" name="chatId" value="@Model.Id" />
                        <input type="hidden" name="roomName" value="@Model.Name" />
                        <div class="input-group mb-3">
                            <textarea type="text" id="msg" name="message" class="form-control"></textarea>
                            <div class="input-group-append">
                                <button type="submit" id="send" value="Send" class="btn btn-primary btn-sm">Gönder</button>
                            </div>
                        </div>


                    </form>

                </div>


            </div>



        </div>
    </div>




</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="~/lib/signalr/signalr.js"></script>

    <script>
        window.scrollTo(0, document.body.scrollHeight);
        document.querySelector(".chat-body").scrollTo(0, document.querySelector(".chat-body").scrollHeight)
        function selectedItem(item) {
            console.log(item)
        }
        var _connectionId=""
        var connection = new signalR.HubConnectionBuilder().withUrl("/chatter").build()
        connection.on("ReceiveMessage", function (data) {
           console.log(data)
            var message = document.createElement("div")
            message.classList.add("message")
            var header = document.createElement("header");
            header.appendChild(document.createTextNode(data.name))
            var p = document.createElement("p");
            p.appendChild(document.createTextNode(data.text))
            var footer = document.createElement("footer");
            footer.appendChild(document.createTextNode(data.timestamp))
            message.appendChild(header)
            message.appendChild(p)
            message.appendChild(footer)
            var body = document.querySelector(".chat-body")
            body.append(message)
            document.querySelector(".chat-body").scrollTo(0,document.querySelector(".chat-body").scrollHeight)

        })
        var joinRoom = function () {
            axios({
                method: 'post',
                url:'/ChatHub/JoinRoom/' + _connectionId + '/@Model.Name'
            }).then(res => {
                console.log("Room Joined",res)
            })
                .catch(err => {
                    console.error("failed to join room",err)
                })

        }
        connection.start().then(function () {
            connection.invoke('getConnectionId').then(function (connectionId) {
                _connectionId = connectionId
                joinRoom()

            })

        })
            .catch(function (err) {
                console.error(err)
            })

        var sendMessage = function (event) {
            event.preventDefault();

            var data = new FormData(event.target)
            document.getElementById("msg").value=''
            axios.post('/ChatHub/SendMessage', data).then(res => {
                console.log("Message Sent",res)
            })
                .catch(err => console.error("Failed to send message"))
        }

    </script>



}


